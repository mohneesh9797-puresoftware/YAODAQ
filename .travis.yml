language: cpp
os: linux
dist: bionic

arch:
  - amd64
  - arm64

env:
  global:
    - ROOT_VERSION=6.20.04

jobs:
  fast_finish: true
  allow_failures:
     - os: osx
     - os: windows
  include:
    - os: osx
      compiler: clang
      osx_image: xcode11.4
    - os: linux
      compiler: clang
      dist: bionic  
    - os: linux
      compiler: gcc
      dist: bionic 
    - os: windows
addons:
  apt:
    sources: ubuntu-toolchain-r-test    
    packages: doxygen cmake lcov
    update: true
  homebrew: 
    packages: doxygen cmake lcov openssl@1.1
    update: true
  
before_install:
  - ./.travis-ci.d/install_dependencies.sh
  
script:
    - source dependencies/root/bin/thisroot.sh
    - mkdir build
    - cd build
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cmake .. ; cmake --build . ; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_COMPILER" == "clang" ]; then cmake .. ; cmake --build . ; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_COMPILER" == "gcc" ]; then cmake .. ;cmake --build . --target coverage ; fi
    - if [ "$TRAVIS_OS_NAME" == "windows" ]; then cmake .. ; cmake --build . ; fi
    - cmake --install .
    # - make test
    # - make docs 
  
after_success:
# Create lcov report
# capture coverage info
 - lcov --directory . --capture --output-file coverage.info
# filter out system and extra files.
# To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
 - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
# output coverage data for debugging (optional)
 - lcov --list coverage.info
# Uploading to CodeCov
# '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
 - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

# Don't send e-mail notifications
notifications:
  email:
    on_success: never
    on_failure: never

